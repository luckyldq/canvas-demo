* {
  padding: 0;
  margin: 0;
}

div {
  margin: 0 auto 100px;
}

/* 通常会使用透明的border模拟出一个三角形： */
.traingle {
  width: 0;
  height: 0;
  border-left: 50px solid transparent;
  border-right: 50px solid transparent;
  border-bottom: 100px solid yellowgreen;
}

/* 《CSS Secret》里面的方法，采用多重线性渐变实现切角。 */
.notching {
  width: 40px;
  height: 40px;
  padding: 40px;
  background: linear-gradient(135deg, transparent 15px, yellowgreen 0) top left,
    linear-gradient(-135deg, transparent 15px, yellowgreen 0) top right,
    linear-gradient(-45deg, transparent 15px, yellowgreen 0) bottom right,
    linear-gradient(45deg, transparent 15px, yellowgreen 0) bottom left;
  background-size: 50% 50%;
  background-repeat: no-repeat;
}

/* 利用伪元素加旋转透视实现梯形： */
.trapezoid {
  position: relative;
  width: 60px;
  padding: 60px;
}

.trapezoid::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: perspective(20px) scaleY(1.3) rotateX(5deg);
  transform-origin: bottom;
  background: yellowgreen;
}

/* 当然，还有另一种更简单的方法是利用border实现，借助上面的构造三角形的方法，在矩形两侧构造两个透明的三角形： */
/* .trapezoid {
    position: relative;
    width: 60px;
    border-top: 60px solid yellowgreen;
    border-left: 40px solid transparent;
    border-right: 40px solid transparent;
} */

/* 梯形加上三角形，很容易就组合成一个五边形，这里需要借助一个伪元素实现： */
.pentagon {
  position: relative;
  width: 60px;
  border-bottom: 60px solid yellowgreen;
  border-left: 40px solid transparent;
  border-right: 40px solid transparent;
}

.pentagon::before {
  content: "";
  position: absolute;
  top: 60px;
  left: -40px;
  border-top: 60px solid yellowgreen;
  border-left: 70px solid transparent;
  border-right: 70px solid transparent;
}

/* 看看上面的梯形，如果两个反方向且底边同样大小的梯形，叠加在一起，是不是就能得到一个六边形呢？ */
.pentagon6 {
  position: relative;
  width: 60px;
  border-bottom: 60px solid yellowgreen;
  border-left: 40px solid transparent;
  border-right: 40px solid transparent;
}

.pentagon6::before {
  content: "";
  position: absolute;
  width: 60px;
  height: 0px;
  top: 60px;
  left: -40px;
  border-top: 60px solid yellowgreen;
  border-left: 40px solid transparent;
  border-right: 40px solid transparent;
}

/* 八边形。 */
.octagon {
  position: relative;
  width: 40px;
  height: 100px;
  background: yellowgreen;
}

.octagon::before {
  content: "";
  height: 60px;
  position: absolute;
  top: 0;
  left: 40px;
  border-left: 30px solid yellowgreen;
  border-top: 20px solid transparent;
  border-bottom: 20px solid transparent;
}

.octagon::after {
  content: "";
  height: 60px;
  position: absolute;
  top: 0;
  left: -30px;
  border-right: 30px solid yellowgreen;
  border-top: 20px solid transparent;
  border-bottom: 20px solid transparent;
}

/* 五角星 */
.star {
  margin: 50px 0;
  position: relative;
  width: 0;
  border-right: 100px solid transparent;
  border-bottom: 70px solid yellowgreen;
  border-left: 100px solid transparent;
  transform: rotate(35deg) scale(.6);
}

.star:before {
  content: '';
  position: absolute;
  border-bottom: 80px solid yellowgreen;
  border-left: 30px solid transparent;
  border-right: 30px solid transparent;
  top: -45px;
  left: -65px;
  transform: rotate(-35deg);
}

.star:after {
  content: '';
  position: absolute;
  top: 3px;
  left: -105px;
  border-right: 100px solid transparent;
  border-bottom: 70px solid yellowgreen;
  border-left: 100px solid transparent;
  transform: rotate(-70deg);
}

/* 六角星 */
.sixstar {
  position: relative;
  width: 0;
  border-left: 50px solid transparent;
  border-right: 50px solid transparent;
  border-bottom: 100px solid yellowgreen;
}

.sixstar:after {
  content: "";
  position: absolute;
  border-left: 50px solid transparent;
  border-right: 50px solid transparent;
  border-top: 100px solid yellowgreen;
  top: 30px;
  left: -50px;
}

/* 八角星 */
.eightstar {
  position: relative;
  width: 100px;
  height: 100px;
  background-color: yellowgreen;
  transform: rotate(30deg);
}

.eightstar::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100px;
  height: 100px;
  transform: rotate(45deg);
  background-color: yellowgreen;
}

/* 十二角星 */
.twelvestar {
  position: relative;
  width: 100px;
  height: 100px;
  margin-bottom: 100px !important;
  background-color: yellowgreen;
  transform: rotate(30deg);
}

.twelvestar::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100px;
  height: 100px;
  transform: rotate(30deg);
  background-color: yellowgreen;
}

.twelvestar::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100px;
  height: 100px;
  transform: rotate(60deg);
  background-color: yellowgreen;
}

/* 椭圆 */
.ellipse {
  width: 120px;
  height: 160px;
  background-color: yellowgreen;
  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
}

/* clip-path 动画 */
.polygon-animate {
  /* position: absolute; */
  width: 200px;
  height: 200px;
  /* top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); */
  background-color: crimson;
  transition: .3s;
  clip-path: polygon(50% 0%,
      0% 100%,
      100% 100%,
      100% 100%,
      100% 100%,
      100% 100%,
      100% 100%,
      100% 100%,
      100% 100%);
  animation: polygon-ani 5s linear infinite;
}

@keyframes polygon-ani {
  10% {
    background-color: darkorange;
    clip-path: polygon(50% 0%,
        100% 50%,
        50% 100%,
        0% 50%,
        0% 50%,
        0% 50%,
        0% 50%,
        0% 50%,
        0% 50%);
  }

  14% {
    clip-path: polygon(50% 0%,
        100% 50%,
        50% 100%,
        0% 50%,
        0% 50%,
        0% 50%,
        0% 50%,
        0% 50%,
        0% 50%);
  }

  24% {
    background-color: lemonchiffon;
    clip-path: polygon(100% 38%,
        82% 100%,
        82% 100%,
        18% 100%,
        0% 38%,
        0% 38%,
        0% 38%,
        0% 38%,
        50% 0%);
  }

  28% {
    clip-path: polygon(100% 38%,
        82% 100%,
        82% 100%,
        18% 100%,
        0% 38%,
        0% 38%,
        0% 38%,
        0% 38%,
        50% 0%);
  }

  38% {
    background-color: darkturquoise;
    clip-path: polygon(50% 0%,
        100% 25%,
        100% 75%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 75%,
        0% 25%,
        0% 25%);
  }

  42% {
    clip-path: polygon(50% 0%,
        100% 25%,
        100% 75%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 75%,
        0% 25%,
        0% 25%);
  }

  52% {
    background-color: darkcyan;
    clip-path: polygon(50% 0%,
        90% 20%,
        100% 60%,
        75% 100%,
        25% 100%,
        25% 100%,
        0% 60%,
        10% 20%,
        50% 0%);
  }

  56% {
    clip-path: polygon(50% 0%,
        90% 20%,
        100% 60%,
        75% 100%,
        25% 100%,
        25% 100%,
        0% 60%,
        10% 20%,
        50% 0%);
  }

  66% {
    background-color: deepskyblue;
    clip-path: polygon(30% 0%,
        70% 0%,
        70% 0%,
        100% 30%,
        100% 70%,
        70% 100%,
        30% 100%,
        0% 70%,
        0% 30%);
  }

  70% {
    clip-path: polygon(30% 0%,
        70% 0%,
        70% 0%,
        100% 30%,
        100% 70%,
        70% 100%,
        30% 100%,
        0% 70%,
        0% 30%);
  }

  80% {
    background-color: indigo;
    clip-path: polygon(83% 12%,
        100% 43%,
        94% 78%,
        68% 100%,
        32% 100%,
        6% 78%,
        0% 43%,
        17% 12%,
        50% 0%);
  }

  84% {
    clip-path: polygon(83% 12%,
        100% 43%,
        94% 78%,
        68% 100%,
        32% 100%,
        6% 78%,
        0% 43%,
        17% 12%,
        50% 0%);
  }

  94% {
    background-color: crimson;
    clip-path: polygon(50% 0%,
        0% 100%,
        100% 100%,
        100% 100%,
        100% 100%,
        100% 100%,
        100% 100%,
        100% 100%,
        100% 100%);
  }
}

/* 盒子过度 */
.triangle2rect {
  position: absolute;
  width: 100px;
  height: 100px;
  /* top: 50%; */
  left: 50%;
  transform: translate(-50%, -50%);
  animation: aniContainer 2s infinite alternate;
  margin-bottom: 100px;
}

.triangle2rect div {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.a {
  background: deeppink;
  clip-path: polygon(0% 0%, 0% 100%, 50% 50%);
  animation: a 2s infinite alternate;
}

.b {
  background: deeppink;
  clip-path: polygon(0% 0%, 100% 0%, 50% 50%);
  animation: b 2s infinite alternate;
}

.c {
  background: deeppink;
  clip-path: polygon(100% 0%, 100% 100%, 50% 50%);
  animation: c 2s infinite alternate;
}

.d {
  background: deeppink;
  clip-path: polygon(100% 100%, 0% 100%, 50% 50%);
  animation: d 2s infinite alternate;
}

@keyframes a {

  0%,
  10% {
    background: deeppink;
    clip-path: polygon(0% 0%, 0% 100%, 50% 50%);
  }

  90%,
  100% {
    background: #000;
    clip-path: polygon(0% 100%, 25% 100%, 12.5% 0%);
  }
}

@keyframes b {

  0%,
  10% {
    background: deeppink;
    clip-path: polygon(0% 0%, 100% 0%, 50% 50%);
  }

  90%,
  100% {
    background: #000;
    clip-path: polygon(25% 0%, 50% 0%, 37.5% 100%);
  }
}

@keyframes c {

  0%,
  10% {
    background: deeppink;
    clip-path: polygon(100% 0%, 100% 100%, 50% 50%);
  }

  90%,
  100% {
    background: #000;
    clip-path: polygon(62.5% 0%, 75% 100%, 50% 100%);
  }
}

@keyframes d {

  0%,
  10% {
    background: deeppink;
    clip-path: polygon(100% 100%, 0% 100%, 50% 50%);
  }

  90%,
  100% {
    background: #000;
    clip-path: polygon(100% 0%, 87.5% 100%, 75% 0%);
  }
}

@keyframes aniContainer {

  0%,
  10% {
    width: 100px;
    height: 100px;
  }

  90%,
  100% {
    width: 250px;
    height: 60px;
  }
}

/* N 型过渡 */
.n-box {
  width: 300px;
  height: 300px;
  /* position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); */
  transition: all .5s;
  transition-timing-function: cubic-bezier(.92, -0.5, 1, .12);
  border-radius: 50%;
}